
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ELASTIC_PORT}:9200
    restart: on-failure
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      #   - cluster.initial_master_nodes=es01,es02,es03
      - cluster.initial_master_nodes=es01
      #  - discovery.seed_hosts=es02,es03
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      # - xpack.license.self_generated.type=${LICENSE}
      - cluster.routing.allocation.disk.watermark.low=1gb
      - cluster.routing.allocation.disk.watermark.high=1gb
      - cluster.routing.allocation.disk.watermark.flood_stage=1gb
    #mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://elasticsearch:9200 | grep -q 'You Know, for Search'"
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - infrastructure_default
    profiles:
      - ussd
      - ivr
      - chat
      - voicechat

  elk-kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
    # image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    volumes:
      - kibanaconfig:/usr/share/kibana/config
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    restart: on-failure
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      # - SERVER_PUBLICBASEURL=${KIBANA_URL}
      # - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY}
      # - XPACK_REPORTING_ENCRYPTIONKEY=${XPACK_REPORTING_ENCRYPTIONKEY}
      # - XPACK_SECURITY_ENCRYPTIONKEY=${XPACK_SECURITY_ENCRYPTIONKEY}
      # - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    #mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - infrastructure_default
    profiles:
      - logs

  elk-logstash:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/config/pipeline:ro,Z
    ports:
      - ${LOGSTACH_PORT1}:5044
      - ${LOGSTACH_PORT2}:50000/tcp
      # - ${LOGSTACH_PORT3}:50000/udp
      - ${LOGSTACH_PORT4}:9600
    #mem_limit: ${MEM_LIMIT}
    environment:
      LS_JAVA_OPTS: -Xms512m -Xmx512m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    networks:
      - infrastructure_default
    restart: on-failure
    profiles:
      - logs

volumes:
  esdata01:
  kibanadata:
  kibanaconfig:

networks:
  infrastructure_default:
    external: true
